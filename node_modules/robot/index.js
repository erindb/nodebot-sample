var sleep = require('sleep');
var io = require('socket.io-client');
var socket;

function done(s, k, a, seconds) {
	var seconds = seconds ? seconds : 1;
    socket.on('done', function() {
    	socket.removeListener('done');
    	sleep.sleep(seconds);
		console.log('robot sent me back "done"');
		var trampoline = k(s);
		while (trampoline){
			trampoline = trampoline();
		}
	})
}

module.exports = {
	connect: function(s, k, a) {
		socket = io.connect('http://localhost:3000');
		socket.on('connect',function() {
			console.log('Client has connected to the server!');
			var trampoline = k(s);
			while (trampoline){
				trampoline = trampoline();
			}
		});
	},
	sleep: sleep.sleep,
	delay: function(action, seconds) {
		var waitTill = new Date(
			new Date().getTime() + 2//(seconds * 1000)
		);
		while(waitTill > new Date()){};
		return action();
	},
	moveForward: function(s, k, a, seconds) {
	    socket.emit('start');
		done(s, k, a, seconds);
	},
	turnRight: function(s, k, a, seconds) {
	    socket.emit('right');
		done(s, k, a, seconds);
	},
	turnLeft: function(s, k, a, seconds) {
	    socket.emit('left');
		done(s, k, a, seconds);
	},
	moveReverse: function(s, k, a, seconds) {
	    socket.emit('reverse');
		done(s, k, a, seconds);
	},
	stop: function(s, k, a, seconds) {
	    socket.emit('stop');
		done(s, k, a, seconds);
	},
	reverseRight: function(s, k, a, seconds) {
	    socket.emit('reverse-right');
		done(s, k, a, seconds);
	}
};